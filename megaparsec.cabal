cabal-version:   2.4
name:            megaparsec
version:         9.2.0
license:         BSD-2-Clause
license-file:    LICENSE.md
maintainer:      Mark Karpov <markkarpov92@gmail.com>
author:
    Megaparsec contributors,
    Paolo Martini <paolo@nemail.it>,
    Daan Leijen <daan@microsoft.com>

tested-with:     ghc ==8.10.7 ghc ==9.0.1 ghc ==9.2.1
homepage:        https://github.com/mrkkrp/megaparsec
bug-reports:     https://github.com/mrkkrp/megaparsec/issues
synopsis:        Monadic parser combinators
description:
    This is an industrial-strength monadic parser combinator library.
    Megaparsec is a feature-rich package that tries to find a nice balance
    between speed, flexibility, and quality of parse errors.

category:        Parsing
build-type:      Simple
extra-doc-files:
    CHANGELOG.md
    README.md

source-repository head
    type:     git
    location: https://github.com/mrkkrp/megaparsec.git

flag dev
    description: Turn on development settings.
    default:     False
    manual:      True

library
    exposed-modules:
        Text.Megaparsec
        Text.Megaparsec.Byte
        Text.Megaparsec.Byte.Binary
        Text.Megaparsec.Byte.Lexer
        Text.Megaparsec.Char
        Text.Megaparsec.Char.Lexer
        Text.Megaparsec.Debug
        Text.Megaparsec.Error
        Text.Megaparsec.Error.Builder
        Text.Megaparsec.Internal
        Text.Megaparsec.Pos
        Text.Megaparsec.Stream

    other-modules:
        Text.Megaparsec.Class
        Text.Megaparsec.Common
        Text.Megaparsec.Lexer
        Text.Megaparsec.State

    default-language: Haskell2010
    build-depends:
        base >=4.13 && <5.0,
        bytestring >=0.2 && <0.12,
        case-insensitive >=1.2 && <1.3,
        containers >=0.5 && <0.7,
        deepseq >=1.3 && <1.5,
        mtl >=2.2.2 && <3.0,
        parser-combinators >=1.0 && <2.0,
        scientific >=0.3.7 && <0.4,
        text >=0.2 && <1.3,
        transformers >=0.4 && <0.7

    if flag(dev)
        ghc-options: -O0 -Wall -Werror

    else
        ghc-options: -O2 -Wall

    if flag(dev)
        ghc-options:
            -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns
            -Wnoncanonical-monad-instances -Wno-missing-home-modules

benchmark bench-speed
    type:             exitcode-stdio-1.0
    main-is:          Main.hs
    hs-source-dirs:   bench/speed
    default-language: Haskell2010
    build-depends:
        base >=4.13 && <5.0,
        bytestring >=0.2 && <0.12,
        containers >=0.5 && <0.7,
        criterion >=0.6.2.1 && <1.6,
        deepseq >=1.3 && <1.5,
        megaparsec,
        text >=0.2 && <1.3

    if flag(dev)
        ghc-options: -O2 -Wall -Werror

    else
        ghc-options: -O2 -Wall

benchmark bench-memory
    type:             exitcode-stdio-1.0
    main-is:          Main.hs
    hs-source-dirs:   bench/memory
    default-language: Haskell2010
    build-depends:
        base >=4.13 && <5.0,
        bytestring >=0.2 && <0.12,
        containers >=0.5 && <0.7,
        deepseq >=1.3 && <1.5,
        megaparsec,
        text >=0.2 && <1.3,
        weigh >=0.0.4

    if flag(dev)
        ghc-options: -O2 -Wall -Werror

    else
        ghc-options: -O2 -Wall
